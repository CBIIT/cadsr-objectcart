<?xml version="1.0" encoding="UTF-8"?>
<project name="System" basedir="." default="dist">

	<description>Build script for building the runtime system</description>

	<!--***********************************************************************
	*** Load the build properties from the file
	*********************************************************************** -->
	<property file="build.properties" />

	<!--***********************************************************************
	*** Import utility script
	*********************************************************************** -->
	<import file="build-scripts\build-utils.xml" />

	<!--***********************************************************************
	*** CLASSPATH AND UNIX-STYLE BASEDIR PROPERTIES
	*********************************************************************** -->
	<path id="classpath">
		<fileset dir="${lib.dir}">
			<include name="*.jar" />
		</fileset>
		<fileset dir="${extension.dir}">
			<include name="*.jar" />
		</fileset>
	</path>

	<!-- set basedir.url = basedir as unix style pathname, regardless of platform -->
	<path id="basedir.path">
		<pathelement path="${basedir}" />
	</path>

	<pathconvert targetos="unix" property="basedir.unix" refid="basedir.path" />


	<!--***********************************************************************
	*** Prepares the directory structure
	*********************************************************************** -->
	<target name="init">
		<SDKecho message="${ant.project.name}: Preparing directories" />
		<mkdir dir="${build.classes.dir}" />
		<mkdir dir="${dist.dir}" />
	</target>

	<!--***********************************************************************
	*** Condition determining if clean is possible or not
	*********************************************************************** -->
	<target name="prepare-clean-condition">
		<SDKecho message="${ant.project.name}: Checking the condition for cleaning" />
		<condition property="clean-condition-met">
			<available file="${src.dir}" type="dir" />
		</condition>
	</target>

	<!--***********************************************************************
	*** Cleans the generated directories and files
	*********************************************************************** -->
	<target name="clean" description="Cleans the generated directories and files" depends="prepare-clean-condition" if="clean-condition-met">
		<SDKecho message="${ant.project.name}: Cleaning directories and files" />
		<delete dir="${build.dir}" />
		<delete dir="${dist.dir}" />
	</target>

	<!--***********************************************************************
	*** Compiles source code
	*********************************************************************** -->
	<target name="compile" depends="init" description="Compiles source code">
		<SDKecho message="${ant.project.name}: Compiling source code" />
		<javac srcdir="${src.dir}" destdir="${build.classes.dir}" debug="true">
			<classpath refid="classpath" />
			<exclude name="gov/nih/nci/objectCart/jUnit/**/*"/>
		</javac>
		<copy todir="${build.classes.dir}">
			<fileset dir="${src.dir}" includes="gov/nih/nci/system/web/struts/action/package.properties" />
		</copy>
	</target>

	<!--***********************************************************************
	*** Create distributable package
	*********************************************************************** -->
	<target name="dist" depends="compile" description="Prepates distribution files">
		<SDKecho message="${ant.project.name}: Creating distributable package" />

		<jar destfile="${dist.dir}\${file.output.extension.client.name}" basedir="${build.classes.dir}">
			<manifest>
				<attribute name="Generated-By" value="caCORE SDK Code Generator" />
			</manifest>
			<include name="gov/nih/nci/objectCart/client/**/*" />
			<include name="gov/nih/nci/objectCart/applicationService/**/*" />
			<fileset dir="${src.dir}">
				<include name="gov/nih/nci/objectCart/client/**/*" />
				<include name="gov/nih/nci/objectCart/applicationService/**/*" />
			</fileset>
		</jar>

		<jar destfile="${dist.dir}\${file.output.extension.core.name}" basedir="${build.classes.dir}">
			<manifest>
				<attribute name="Generated-By" value="caCORE SDK Code Generator" />
			</manifest>
			<include name="gov/nih/nci/objectCart/dao/**/*" />
			<include name="gov/nih/nci/objectCart/dao/orm/**/*" />
			<include name="gov/nih/nci/objectCart/applicationService/impl/**/*" />
			<include name="gov/nih/nci/objectCart/util/**/*" />
			<include name="gov/nih/nci/objectCart/util/xml/**/*" />		
			<fileset dir="${src.dir}">
				<include name="gov/nih/nci/objectCart/dao/**/*" />
				<include name="gov/nih/nci/objectCart/dao/orm/**/*" />
				<include name="gov/nih/nci/objectCart/applicationService/impl/**/*" />
				<include name="gov/nih/nci/objectCart/util/**/*" />
				<include name="gov/nih/nci/objectCart/util/xml/**/*" />
			</fileset>
		</jar>

	</target>

</project>
